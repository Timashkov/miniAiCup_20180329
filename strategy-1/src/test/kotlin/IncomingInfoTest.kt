import data.StepPoint
import org.json.JSONObject
import utils.Logger


class IncomingInfoTest {

    lateinit var mConfig: WorldConfig
    lateinit var mProcessor: Processor
    val mLogger = Logger()

    @org.junit.Before
    fun setUp() {


        val json = JSONObject("{\"FOOD_MASS\":1,\"GAME_HEIGHT\":660,\"GAME_TICKS\":75000,\"GAME_WIDTH\":660,\"INERTION_FACTOR\":10,\"MAX_FRAGS_CNT\":10,\"SPEED_FACTOR\":25,\"TICKS_TIL_FUSION\":250,\"VIRUS_RADIUS\":22,\"VIRUS_SPLIT_MASS\":80,\"VISCOSITY\":0.25}")
        mConfig = WorldConfig(json)
        mProcessor = Processor(json)

    }

    @org.junit.After
    fun tearDown() {
    }

    @org.junit.Test
    fun testProcessor() {
        val tickData = JSONObject("{\"Mine\":[{\"R\":51.33049479579734,\"SX\":-7.855825053989533E-4,\"SY\":9.620611007029865E-20,\"X\":168.94036461385343,\"Y\":608.6695052042027,\"Id\":\"1\",\"M\":658.7049239953445}],\"Objects\":[{\"T\":\"F\",\"X\":29,\"Y\":535},{\"T\":\"F\",\"X\":272,\"Y\":446},{\"T\":\"F\",\"X\":233,\"Y\":468},{\"T\":\"F\",\"X\":93,\"Y\":612},{\"T\":\"F\",\"X\":25,\"Y\":599},{\"T\":\"F\",\"X\":246,\"Y\":577},{\"T\":\"F\",\"X\":58,\"Y\":432},{\"T\":\"F\",\"X\":285,\"Y\":599},{\"T\":\"F\",\"X\":217,\"Y\":426},{\"T\":\"F\",\"X\":108,\"Y\":641},{\"T\":\"F\",\"X\":15,\"Y\":516},{\"T\":\"F\",\"X\":200,\"Y\":471},{\"T\":\"F\",\"X\":240,\"Y\":527},{\"T\":\"F\",\"X\":302,\"Y\":591},{\"T\":\"F\",\"X\":298,\"Y\":477},{\"T\":\"F\",\"X\":10,\"Y\":468},{\"T\":\"F\",\"X\":216,\"Y\":651},{\"T\":\"F\",\"X\":246,\"Y\":441},{\"T\":\"F\",\"X\":263,\"Y\":499},{\"T\":\"F\",\"X\":127,\"Y\":652},{\"T\":\"F\",\"X\":21,\"Y\":466},{\"T\":\"F\",\"X\":249,\"Y\":636},{\"T\":\"F\",\"X\":268,\"Y\":636},{\"T\":\"F\",\"X\":322,\"Y\":483},{\"T\":\"F\",\"X\":254,\"Y\":535},{\"T\":\"F\",\"X\":197,\"Y\":416},{\"T\":\"F\",\"X\":198,\"Y\":544},{\"T\":\"F\",\"X\":224,\"Y\":552},{\"T\":\"F\",\"X\":107,\"Y\":641},{\"T\":\"F\",\"X\":186,\"Y\":483},{\"T\":\"F\",\"X\":296,\"Y\":653},{\"T\":\"F\",\"X\":230,\"Y\":648},{\"T\":\"F\",\"X\":251,\"Y\":493},{\"T\":\"F\",\"X\":270,\"Y\":547},{\"T\":\"F\",\"X\":253,\"Y\":510},{\"T\":\"F\",\"X\":222,\"Y\":412},{\"T\":\"F\",\"X\":68,\"Y\":644},{\"T\":\"F\",\"X\":265,\"Y\":637},{\"T\":\"F\",\"X\":288,\"Y\":580},{\"T\":\"F\",\"X\":233,\"Y\":651},{\"T\":\"F\",\"X\":359,\"Y\":596},{\"T\":\"F\",\"X\":301,\"Y\":596},{\"T\":\"F\",\"X\":285,\"Y\":580},{\"T\":\"F\",\"X\":352,\"Y\":606},{\"T\":\"F\",\"X\":308,\"Y\":606},{\"T\":\"F\",\"X\":258,\"Y\":612},{\"T\":\"F\",\"X\":6,\"Y\":502},{\"T\":\"F\",\"X\":34,\"Y\":561},{\"T\":\"F\",\"X\":296,\"Y\":574},{\"T\":\"F\",\"X\":242,\"Y\":568},{\"T\":\"F\",\"X\":185,\"Y\":428},{\"T\":\"F\",\"X\":144,\"Y\":416},{\"T\":\"F\",\"X\":136,\"Y\":415},{\"T\":\"F\",\"X\":346,\"Y\":528},{\"T\":\"F\",\"X\":314,\"Y\":528},{\"T\":\"F\",\"X\":159,\"Y\":436},{\"T\":\"F\",\"X\":233,\"Y\":504},{\"T\":\"F\",\"X\":21,\"Y\":455},{\"T\":\"F\",\"X\":135,\"Y\":538},{\"T\":\"F\",\"X\":20,\"Y\":535},{\"T\":\"F\",\"X\":75,\"Y\":449},{\"T\":\"F\",\"X\":83,\"Y\":599},{\"T\":\"F\",\"X\":349,\"Y\":595},{\"T\":\"F\",\"X\":311,\"Y\":595},{\"T\":\"F\",\"X\":241,\"Y\":619},{\"T\":\"F\",\"X\":272,\"Y\":442},{\"T\":\"F\",\"X\":184,\"Y\":432},{\"T\":\"F\",\"X\":271,\"Y\":627},{\"T\":\"F\",\"X\":235,\"Y\":419},{\"T\":\"F\",\"X\":36,\"Y\":500},{\"T\":\"F\",\"X\":279,\"Y\":505},{\"T\":\"F\",\"X\":88,\"Y\":647},{\"T\":\"F\",\"X\":237,\"Y\":463},{\"T\":\"F\",\"X\":279,\"Y\":447},{\"T\":\"F\",\"X\":340,\"Y\":511},{\"T\":\"F\",\"X\":320,\"Y\":511},{\"T\":\"F\",\"X\":110,\"Y\":599},{\"T\":\"F\",\"X\":72,\"Y\":543},{\"T\":\"F\",\"X\":206,\"Y\":491},{\"T\":\"F\",\"X\":26,\"Y\":640},{\"T\":\"F\",\"X\":259,\"Y\":623},{\"T\":\"F\",\"X\":168,\"Y\":501},{\"T\":\"F\",\"X\":78,\"Y\":623},{\"T\":\"V\",\"X\":217,\"Y\":262,\"Id\":\"21\",\"M\":40},{\"T\":\"V\",\"X\":138,\"Y\":376,\"Id\":\"268\",\"M\":40},{\"T\":\"V\",\"X\":59,\"Y\":256,\"Id\":\"509\",\"M\":40},{\"T\":\"V\",\"X\":59,\"Y\":404,\"Id\":\"512\",\"M\":40},{\"T\":\"V\",\"X\":614,\"Y\":423,\"Id\":\"754\",\"M\":40},{\"T\":\"V\",\"X\":595,\"Y\":234,\"Id\":\"995\",\"M\":40}]}\n")

        val parsed = mProcessor.parseIncoming(tickData)
        mProcessor.analyzeData(parsed, 2)
        val point = parsed.mineInfo.getBestMovementPoint(null)
        assert(point != StepPoint.DEFAULT)
    }

}

